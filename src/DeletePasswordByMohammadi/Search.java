/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package DeletePasswordByMohammadi;

import java.awt.event.KeyEvent;
import java.sql.*;
import javax.swing.JOptionPane;
import supermarket.DAL;
/**
 * @author android1
 */
public class Search extends javax.swing.JFrame {
private DAL dal = new DAL();
    /**
     * Creates new form Search
     */
    public Search() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txtid = new javax.swing.JTextField();
        txtusername = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        txtpassword = new javax.swing.JPasswordField();
        jLabel3 = new javax.swing.JLabel();
        Searchbtn = new javax.swing.JButton();
        txtemail = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        txtgender = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        txtedit = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(240, 130, 0));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setText("Enter ID to search:");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 90, 170, 60));

        txtid.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtidKeyPressed(evt);
            }
        });
        jPanel1.add(txtid, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 90, 250, 60));

        txtusername.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtusernameActionPerformed(evt);
            }
        });
        jPanel1.add(txtusername, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 160, 249, 68));

        jLabel2.setText("Username");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 180, -1, -1));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 970, 240));

        jPanel2.setBackground(new java.awt.Color(204, 204, 0));
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        txtpassword.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtpasswordActionPerformed(evt);
            }
        });
        jPanel2.add(txtpassword, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 10, 249, 67));

        jLabel3.setText("Password");
        jPanel2.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 30, -1, -1));

        Searchbtn.setText("Search");
        Searchbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SearchbtnActionPerformed(evt);
            }
        });
        jPanel2.add(Searchbtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 380, 250, 50));

        txtemail.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtemailActionPerformed(evt);
            }
        });
        jPanel2.add(txtemail, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 100, 250, 70));

        jLabel4.setText("Email");
        jPanel2.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 120, -1, -1));

        jButton2.setText("Clear");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jPanel2.add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 380, 260, 50));
        jPanel2.add(txtgender, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 200, 250, 70));

        jLabel5.setText("Gender");
        jPanel2.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 220, -1, -1));

        txtedit.setText("Edit");
        txtedit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txteditActionPerformed(evt);
            }
        });
        jPanel2.add(txtedit, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 380, 240, 50));

        getContentPane().add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 250, 970, 470));

        pack();
    }// </editor-fold>//GEN-END:initComponents


    // Clears all input and output fields
    private void clearFields() {
        txtid.setText("");
        txtusername.setText("");
        txtpassword.setText("");
        txtemail.setText("");
        txtgender.setText("");
    }

    private void SearchbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SearchbtnActionPerformed

        // Step 1: Get the text input and trim it (remove spaces)
        String idText = txtid.getText().trim();

        // Step 2: Check if user entered anything
        if (idText.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Please enter an ID to search.");
            return;  // Stop method here
        }

        int userId;
        try {
            // Step 3: Try to convert the input text to an integer
            userId = Integer.parseInt(idText);
        } catch (NumberFormatException e) {
            // If input is not a number, show error and stop
            JOptionPane.showMessageDialog(this, "Invalid ID format. Please enter a numeric ID.");
            return;
        }

        try {
            // Step 4: Load MariaDB JDBC driver
            Class.forName("org.mariadb.jdbc.Driver");
        } catch (ClassNotFoundException e) {
            JOptionPane.showMessageDialog(this, "MariaDB Driver not found.");
            return;
        }

        String sql = "SELECT * FROM users WHERE user_id = ?";

        // Step 5: Connect to database and run query using try-with-resources (auto-closes resources)
        try (Connection con = DriverManager.getConnection("jdbc:mariadb://localhost:3306/supermarket", "root", "");

             PreparedStatement pstm = con.prepareStatement(sql)) {

            // Step 6: Set the user_id parameter in the query
            pstm.setInt(1, userId);

            // Step 7: Execute the query and get results
            try (ResultSet rs = pstm.executeQuery()) {
                if (rs.next()) {
                    // Step 8: If record found, fill the text fields with data
                    txtusername.setText(rs.getString("username"));
                    txtpassword.setText(rs.getString("password"));  // For security, consider not showing real password
                    txtemail.setText(rs.getString("email"));
                    txtgender.setText(rs.getString("gender"));
                } else {
                    // Step 9: If no record found, notify user and clear fields
                    JOptionPane.showMessageDialog(this, "Record not found.");
                    clearFields();
                }
            }
        } catch (SQLException e) {
            // Step 10: Handle database errors
            JOptionPane.showMessageDialog(this, "Database error: " + e.getMessage());
        }


    }//GEN-LAST:event_SearchbtnActionPerformed

    private void txtusernameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtusernameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtusernameActionPerformed

    private void txtemailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtemailActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtemailActionPerformed

    private void txtpasswordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtpasswordActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtpasswordActionPerformed

    private void txtidKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtidKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            SearchbtnActionPerformed(null);  // Trigger search on Enter key press
        }
    }//GEN-LAST:event_txtidKeyPressed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        clearFields();


    }//GEN-LAST:event_jButton2ActionPerformed

    private void txteditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txteditActionPerformed
     // Get and validate gender
  
    String email = txtemail.getText().trim();
    String gender = txtgender.getText().trim();

    if (!(gender.equalsIgnoreCase("Male") || gender.equalsIgnoreCase("Female"))) {      // doesn't allow You to choose other things
        JOptionPane.showMessageDialog(this, "Gender must be either 'Male' or 'Female'.");
        return;  // Stop the update process
    }
    
       // Get and validate email
      if (!email.matches("^[\\w.-]+@[\\w.-]+\\.[a-zA-Z]{2,6}$")) {              // doesn't allow You without @ or . or .org or .comother things
        JOptionPane.showMessageDialog(this, "Invalid email format.");
        return;
    }

    

    try {
        String sql = "UPDATE users SET username=?, password=?, email=?, gender=? WHERE user_id=?";
        try (PreparedStatement pstm = dal.getConnection().prepareStatement(sql)) {
            pstm.setString(1, txtusername.getText());
            pstm.setString(2, txtpassword.getText());
            pstm.setString(3, txtemail.getText());
            pstm.setString(4, gender);  // Safe now
            pstm.setInt(5, Integer.parseInt(txtid.getText()));
            pstm.executeUpdate();
            JOptionPane.showMessageDialog(null, "Updated successfully.");
        }
    } catch (Exception e) {
        JOptionPane.showMessageDialog(this, "Error: " + e.getMessage());
    }
        
    }//GEN-LAST:event_txteditActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Search.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Search.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Search.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Search.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Search().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Searchbtn;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JButton txtedit;
    private javax.swing.JTextField txtemail;
    private javax.swing.JTextField txtgender;
    private javax.swing.JTextField txtid;
    private javax.swing.JPasswordField txtpassword;
    private javax.swing.JTextField txtusername;
    // End of variables declaration//GEN-END:variables
}
